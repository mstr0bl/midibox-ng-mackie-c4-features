# run script for simple sequencer
#
# Similar to the SEQ1.NGR example, but CC is sent
#
#################################################################################
if ^section == 0

  log "Simple Sequencer is ready!"

  # set clock divider to 6 (@24 PPQN means one clock per 16th note)
  exec_meta MClkSetDivider 6

  # set tempo
  exec_meta MClkSetTempo 120

endif

#################################################################################
# MIDI Start
#################################################################################
if ^section == 1

  # set step number to 1
  set LED:2001 1

endif

#################################################################################
# MIDI Clock
#################################################################################
if ^section == 2

  # store step number in ^value for faster access
  set ^value LED:2001

  # play step
  if    ^value == 1
      #        delay  length  type       port chn cc     velocity
      send_seq     0       0  CC         USB1   1   1     ENC:1
  elsif ^value == 2
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:2
  elsif ^value == 3
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:3
  elsif ^value == 4
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:4
  elsif ^value == 5
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:5
  elsif ^value == 6
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:6
  elsif ^value == 7
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:7
  elsif ^value == 8
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:8
  elsif ^value == 9
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:9
  elsif ^value == 10
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:10
  elsif ^value == 11
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:11
  elsif ^value == 12
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:12
  elsif ^value == 13
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:13
  elsif ^value == 14
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:14
  elsif ^value == 15
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:15
  elsif ^value == 16
      #        delay  length  type       port chn cc      velocity
      send_seq     0       0  CC         USB1   1   1     ENC:16
  endif

  # increment step
  set LED:2001 [LED:2001 + 1]
  if LED:2001 > 16
    set LED:2001 1
  endif

endif
#################################################################################

